name: Windows DotNet Binary in Non Standard Path
id: 21179107-099a-324a-94d3-08301e6c065f
version: 1
description: The following analytic identifies native .net binaries within the Windows
  operating system that may be abused by adversaries by moving it to a new directory.
  The analytic identifies the .net binary by using a list. If one or the other matches
  an alert will be generated. Adversaries abuse these binaries as they are native
  to Windows and native DotNet. Note that not all SDK (post install of Windows) are
  captured in the list. Lookup - https://github.com/splunk/security_content/blob/develop/lookups/is_net_windows_file.csv.
search: ' $ssa_input = | from read_ssa_enriched_events() | eval dest_device_id=ucast(map_get(input_event,
  "dest_device_id"), "string", null), dest_user_id=ucast(map_get(input_event, "dest_user_id"),
  "string", null), timestamp=parse_long(ucast(map_get(input_event, "_time"), "string",
  null)), process_name=lower(ucast(map_get(input_event, "process_name"), "string",
  null)), process_path=lower(ucast(map_get(input_event, "process_path"), "string",
  null)), event_id=ucast(map_get(input_event, "event_id"), "string", null);

  $cond_1 = | from $ssa_input | where process_name="msbuild.exe" OR process_name="comsvcconfig.exe"
  OR process_name="dfsradmin.exe" OR process_name="dfsvc.exe" OR process_name="microsoft.workflow.compiler.exe"
  OR process_name="smsvchost.exe" OR process_name="wsatconfig.exe" OR process_name="addinprocess.exe"
  OR process_name="addinprocess32.exe" OR process_name="addinutil.exe" OR process_name="aspnet_compiler.exe"
  OR process_name="aspnet_regbrowsers.exe" OR process_name="aspnet_regsql.exe" OR
  process_name="caspol.exe" OR process_name="datasvcutil.exe" OR process_name="edmgen.exe"
  OR process_name="installutil.exe" OR process_name="jsc.exe" OR process_name="ngentask.exe"
  OR process_name="regasm.exe" OR process_name="regsvcs.exe" OR process_name="sdnbr.exe"
  OR process_name="acu.exe" OR process_name="appvstreamingux.exe" OR process_name="dsac.exe"
  OR process_name="lbfoadmin.exe" OR process_name="microsoft.uev.synccontroller.exe"
  OR process_name="mtedit.exe" OR process_name="scriptrunner.exe" OR process_name="servermanager.exe"
  OR process_name="stordiag.exe" OR process_name="tzsync.exe" OR process_name="uevagentpolicygenerator.exe"
  OR process_name="uevappmonitor.exe" OR process_name="uevtemplatebaselinegenerator.exe"
  OR process_name="uevtemplateconfigitemgenerator.exe" OR process_name="powershell_ise.exe"
  OR process_name="iediagcmd.exe" OR process_name="xbox.tcui.exe" OR process_name="microsoft.activedirectory.webservices.exe"
  OR process_name="iisual.exe" OR process_name="filehistory.exe" OR process_name="secureassessmentbrowser.exe";

  | from $cond_1 | where match_regex(process_path, /(?i)\\windows\\system32/)=false
  AND match_regex(process_path, /(?i)\\windows\\syswow64/)=false AND match_regex(process_path,
  /(?i)\\windows\\adws/)=false AND match_regex(process_path, /(?i)\\windows\\networkcontroller/)=false
  AND match_regex(process_path, /(?i)\\windows\\systemapps/)=false AND match_regex(process_path,
  /(?i)\\winsxs/)=false AND match_regex(process_path, /(?i)\\microsoft.net/)=false
  | eval body=create_map("category_id", 101, "class_id", 101000, "detection_start_time", timestamp, 
  "detection_end_time", timestamp, "device_entities", [create_map("uid", ucast(map_get(input_event, "dest_device_id"), "string", null), "type_id", 0)], 
  "disposition_id", 1, "end_time", timestamp, "event_id", 10100001, "event_time", strftime(timestamp, "%Y-%m-%dT%H:%M:%S.%6QZ", "%Z"), 
  "finding", create_map("confidence", 70, "confidence_id", 3, 
  "context_ids", [10, 45], "impact", 70, "impact_id", 4,
  "kill_chain_phase", "Actions on Objectives", "kill_chain_phase_id", 7, 
  "risk_level", "Medium", "risk_level_id", 2, "risk_score", 49, 
  "type_id", 1, "ref_event_uid", event_id), "message", "A system process $process_name$ with commandline $cmd_line$ spawn in non-default folder path on host $dest_device_id$", 
  "metadata", create_map("log_name", "Endpoint_Processes", "version", "1.0.0"), 
  "observables", [create_map("name", "dest_device_id", "role_ids", [4], "type_id", 4, "value", dest_device_id), create_map("name", "dest_user_id", "role_ids", [4], "type_id", 6, "value", dest_user_id)], 
  "origin", create_map("product", create_map("name", "Splunk Behavioral Analytics")), 
  "rule", create_map("name", "Windows DotNet Binary in Non Standard Path"), "start_time", timestamp, "time", timestamp,
  "user_entities", [create_map("uid", ucast(map_get(input_event, "dest_user_id"),"string", null))]) | into write_ssa_finding_events();'
how_to_implement: Collect endpoint data such as sysmon or 4688 events.
known_false_positives: False positives may be present and filtering may be required.
  Certain utilities will run from non-standard paths based on the third-party application
  in use.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml
- https://attack.mitre.org/techniques/T1036/003/
- https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/
- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md
tags:
  analytic_story:
  - Masquerading - Rename System Utilities
  - Unusual Processes
  - Ransomware
  - Signed Binary Proxy Execution InstallUtil
  - WhisperGate
  cis20:
  - CIS 8
  kill_chain_phases:
  - Actions on Objectives
  mitre_attack_id:
  - T1036
  - T1036.003
  - T1218
  - T1218.004
  nist:
  - PR.PT
  - DE.CM
  required_fields:
  - dest_device_id
  - process_name
  - _time
  - dest_user_id
  - process_path
  risk_score: 49
  security_domain: endpoint
  risk_severity: low
test:
  name: Windows DotNet Binary in Non Standard Path Unit Test
  tests:
  - name: Windows DotNet Binary in Non Standard Path
    file: endpoint/ssa___windows_dotnet_binary_in_non_standard_path.yml
    pass_condition: '@count_eq(1)'
    attack_data:
    - file_name: dotnet_lolbin-windows-security.log
      data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1036/system_process_running_unexpected_location/dotnet_lolbin-windows-security.log
      source: WinEventLog:Security
